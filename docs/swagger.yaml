basePath: /
definitions:
  handler.Tokens:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  repository.Attachment:
    properties:
      id:
        type: integer
      label:
        type: string
      type:
        type: string
      url:
        type: string
    type: object
  repository.Day:
    properties:
      attachments:
        items:
          $ref: '#/definitions/repository.Attachment'
        type: array
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  repository.User:
    properties:
      email:
        type: string
      id:
        type: integer
      refreshToken:
        type: string
      role:
        type: string
    type: object
  validators.GlobalErrorHandlerResp:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
host: 172.23.116.163:9000
info:
  contact: {}
  title: Advent Calendar API docs
  version: "1.0"
paths:
  /api/days:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Day'
            type: array
      tags:
      - Days
    post:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - in: formData
        minLength: 5
        name: description
        required: true
        type: string
      - in: formData
        minLength: 5
        name: title
        required: true
        type: string
      - collectionFormat: csv
        description: ' '
        in: formData
        items:
          type: file
        name: attachments
        type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
      tags:
      - Days
  /api/settings:
    put:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - in: formData
        maximum: 12
        minimum: 1
        name: month
        required: true
        type: integer
      - in: formData
        name: showAllDays
        type: boolean
      - collectionFormat: csv
        description: ' '
        in: formData
        items:
          type: file
        name: attachments
        type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
      tags:
      - Days
  /api/users/check:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
      tags:
      - Users
  /api/users/login:
    post:
      parameters:
      - in: formData
        minLength: 5
        name: email
        required: true
        type: string
      - in: formData
        minLength: 5
        name: password
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Tokens'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
      tags:
      - Users
  /api/users/refresh:
    patch:
      parameters:
      - description: RefreshToken
        in: header
        name: RefreshToken
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Tokens'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/validators.GlobalErrorHandlerResp'
      tags:
      - Users
swagger: "2.0"
